{"mappings":"ACEA,MAAM,EAAU,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,YAAc,MAM9D,SAAS,IACL,IAAM,EAAa,SAAS,cAAc,CAAC,cAC3C,CAAA,EAAW,SAAS,CAAG,GACvB,EAAQ,OAAO,CAAC,AAAC,IACb,IAAM,EAAW,SAAS,aAAa,CAAC,KACxC,CAAA,EAAS,SAAS,CAAG;AAArB,UACE,EAAE,EAAO,IAAI,CAAC,GAAG,EAAE,EAAO,IAAI,CAAC,EAAE,EAAE,EAAO,WAAW,CAAC;AAAtD,aACG,EAAE,EAAO,QAAQ,CAAC;AAAlB,IACT,CAAC,CACG,EAAW,WAAW,CAAC,EAC3B,EACJ,CAcA,MAAM,EAAa,SAAS,cAAc,CAAC,eAC3C,EAAW,gBAAgB,CAAC,SAAU,AAAC,IACnC,EAAM,cAAc,GAEpB,IAAM,EAAO,SAAS,cAAc,CAAC,QAAQ,KAAK,CAC5C,EAAO,SAAS,cAAc,CAAC,QAAQ,KAAK,CAC5C,EAAc,SAAS,cAAc,CAAC,eAAe,KAAK,CAC1D,EAAW,SAAS,cAAc,CAAC,YAAY,KAAK,CAE1D,GAAI,CAAC,CAAC,IAAK,IAAK,IAAI,CAAC,QAAQ,CAAC,GAAc,CACxC,MAAM,wDACN,MACJ,CAQA,AAhCJ,CAAA,SAAmB,CAAM,EAErB,GAAI,EAAQ,IAAI,CAAC,AAAA,GAAK,EAAE,IAAI,GAAK,EAAO,IAAI,EAAG,CAC3C,MAAM,+BACN,MACJ,CAEA,EAAQ,IAAI,CAAC,GAvBb,aAAa,OAAO,CAAC,UAAW,KAAK,SAAS,CAAC,IAyB/C,GACJ,CAAA,EAgBsB,CACd,KAAA,EACA,KAAA,EACA,YAAA,EACA,SAAA,CACJ,GAGA,EAAW,KAAK,EACpB,GAEA","sources":["<anon>","src/script.js"],"sourcesContent":["\"use strict\";\n// Initialize courses array from localStorage or empty array\nconst courses = JSON.parse(localStorage.getItem(\"courses\") || \"[]\");\n// Helper function to save courses to localStorage\nfunction saveCourses() {\n    localStorage.setItem(\"courses\", JSON.stringify(courses));\n}\n// Function to display courses on the webpage\nfunction displayCourses() {\n    const courseList = document.getElementById(\"course-list\");\n    courseList.innerHTML = \"\"; // Clear existing content\n    courses.forEach((course)=>{\n        const listItem = document.createElement(\"li\");\n        listItem.innerHTML = `\r\n    <span>${course.code} - ${course.name} (${course.progression})</span>\r\n    <a href=\"${course.syllabus}\" target=\"_blank\">View Syllabus</a>\r\n    `;\n        courseList.appendChild(listItem);\n    });\n}\n// Function to add a new course\nfunction addCourse(course) {\n    // Check if course code already exists\n    if (courses.some((c)=>c.code === course.code)) {\n        alert(\"Course code must be unique.\");\n        return;\n    }\n    // Add new course to courses array\n    courses.push(course);\n    saveCourses(); // Save to localStorage\n    displayCourses(); // Update the course list\n}\n// Event listener for form submission\nconst courseForm = document.getElementById(\"course-form\");\ncourseForm.addEventListener(\"submit\", (event)=>{\n    event.preventDefault();\n    // Get form values\n    const code = document.getElementById(\"code\").value;\n    const name = document.getElementById(\"name\").value;\n    const progression = document.getElementById(\"progression\").value;\n    const syllabus = document.getElementById(\"syllabus\").value;\n    // Simple validation for progression\n    if (![\n        \"A\",\n        \"B\",\n        \"C\"\n    ].includes(progression)) {\n        alert(\"Invalid progression value. Please select A, B, or C.\");\n        return;\n    }\n    // Create a new course object\n    const newCourse = {\n        code,\n        name,\n        progression,\n        syllabus\n    };\n    addCourse(newCourse);\n    // Clear form fields after submission\n    courseForm.reset();\n});\n// Display courses on page load\ndisplayCourses();\n\n//# sourceMappingURL=index.03228170.js.map\n","\"use strict\";\n// Initialize courses array from localStorage or empty array\nconst courses = JSON.parse(localStorage.getItem('courses') || '[]');\n// Helper function to save courses to localStorage\nfunction saveCourses() {\n    localStorage.setItem('courses', JSON.stringify(courses));\n}\n// Function to display courses on the webpage\nfunction displayCourses() {\n    const courseList = document.getElementById('course-list');\n    courseList.innerHTML = ''; // Clear existing content\n    courses.forEach((course) => {\n        const listItem = document.createElement('li');\n        listItem.innerHTML = `\r\n    <span>${course.code} - ${course.name} (${course.progression})</span>\r\n    <a href=\"${course.syllabus}\" target=\"_blank\">View Syllabus</a>\r\n    `;\n        courseList.appendChild(listItem);\n    });\n}\n// Function to add a new course\nfunction addCourse(course) {\n    // Check if course code already exists\n    if (courses.some(c => c.code === course.code)) {\n        alert('Course code must be unique.');\n        return;\n    }\n    // Add new course to courses array\n    courses.push(course);\n    saveCourses(); // Save to localStorage\n    displayCourses(); // Update the course list\n}\n// Event listener for form submission\nconst courseForm = document.getElementById('course-form');\ncourseForm.addEventListener('submit', (event) => {\n    event.preventDefault();\n    // Get form values\n    const code = document.getElementById('code').value;\n    const name = document.getElementById('name').value;\n    const progression = document.getElementById('progression').value;\n    const syllabus = document.getElementById('syllabus').value;\n    // Simple validation for progression\n    if (!['A', 'B', 'C'].includes(progression)) {\n        alert('Invalid progression value. Please select A, B, or C.');\n        return;\n    }\n    // Create a new course object\n    const newCourse = {\n        code,\n        name,\n        progression,\n        syllabus\n    };\n    addCourse(newCourse);\n    // Clear form fields after submission\n    courseForm.reset();\n});\n// Display courses on page load\ndisplayCourses();\n"],"names":["courses","JSON","parse","localStorage","getItem","displayCourses","courseList","document","getElementById","innerHTML","forEach","course","listItem","createElement","code","name","progression","syllabus","appendChild","courseForm","addEventListener","event","preventDefault","value","includes","alert","addCourse","some","c","push","setItem","stringify","reset"],"version":3,"file":"index.03228170.js.map"}