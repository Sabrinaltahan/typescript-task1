{"mappings":"AAAA;AACA,4DAA4D;AAC5D,MAAM,UAAU,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,cAAc;AAC9D,kDAAkD;AAClD,SAAS;IACL,aAAa,OAAO,CAAC,WAAW,KAAK,SAAS,CAAC;AACnD;AACA,6CAA6C;AAC7C,SAAS;IACL,MAAM,aAAa,SAAS,cAAc,CAAC;IAC3C,WAAW,SAAS,GAAG,IAAI,yBAAyB;IACpD,QAAQ,OAAO,CAAC,CAAC;QACb,MAAM,WAAW,SAAS,aAAa,CAAC;QACxC,SAAS,SAAS,GAAG,CAAC;UACpB,EAAE,OAAO,IAAI,CAAC,GAAG,EAAE,OAAO,IAAI,CAAC,EAAE,EAAE,OAAO,WAAW,CAAC;aACnD,EAAE,OAAO,QAAQ,CAAC;IAC3B,CAAC;QACG,WAAW,WAAW,CAAC;IAC3B;AACJ;AACA,+BAA+B;AAC/B,SAAS,UAAU,MAAM;IACrB,sCAAsC;IACtC,IAAI,QAAQ,IAAI,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK,OAAO,IAAI,GAAG;QAC3C,MAAM;QACN;IACJ;IACA,kCAAkC;IAClC,QAAQ,IAAI,CAAC;IACb,eAAe,uBAAuB;IACtC,kBAAkB,yBAAyB;AAC/C;AACA,qCAAqC;AACrC,MAAM,aAAa,SAAS,cAAc,CAAC;AAC3C,WAAW,gBAAgB,CAAC,UAAU,CAAC;IACnC,MAAM,cAAc;IACpB,kBAAkB;IAClB,MAAM,OAAO,SAAS,cAAc,CAAC,QAAQ,KAAK;IAClD,MAAM,OAAO,SAAS,cAAc,CAAC,QAAQ,KAAK;IAClD,MAAM,cAAc,SAAS,cAAc,CAAC,eAAe,KAAK;IAChE,MAAM,WAAW,SAAS,cAAc,CAAC,YAAY,KAAK;IAC1D,oCAAoC;IACpC,IAAI,CAAC;QAAC;QAAK;QAAK;KAAI,CAAC,QAAQ,CAAC,cAAc;QACxC,MAAM;QACN;IACJ;IACA,6BAA6B;IAC7B,MAAM,YAAY;QACd;QACA;QACA;QACA;IACJ;IACA,UAAU;IACV,qCAAqC;IACrC,WAAW,KAAK;AACpB;AACA,+BAA+B;AAC/B","sources":["src/script.js"],"sourcesContent":["\"use strict\";\n// Initialize courses array from localStorage or empty array\nconst courses = JSON.parse(localStorage.getItem('courses') || '[]');\n// Helper function to save courses to localStorage\nfunction saveCourses() {\n    localStorage.setItem('courses', JSON.stringify(courses));\n}\n// Function to display courses on the webpage\nfunction displayCourses() {\n    const courseList = document.getElementById('course-list');\n    courseList.innerHTML = ''; // Clear existing content\n    courses.forEach((course) => {\n        const listItem = document.createElement('li');\n        listItem.innerHTML = `\r\n    <span>${course.code} - ${course.name} (${course.progression})</span>\r\n    <a href=\"${course.syllabus}\" target=\"_blank\">View Syllabus</a>\r\n    `;\n        courseList.appendChild(listItem);\n    });\n}\n// Function to add a new course\nfunction addCourse(course) {\n    // Check if course code already exists\n    if (courses.some(c => c.code === course.code)) {\n        alert('Course code must be unique.');\n        return;\n    }\n    // Add new course to courses array\n    courses.push(course);\n    saveCourses(); // Save to localStorage\n    displayCourses(); // Update the course list\n}\n// Event listener for form submission\nconst courseForm = document.getElementById('course-form');\ncourseForm.addEventListener('submit', (event) => {\n    event.preventDefault();\n    // Get form values\n    const code = document.getElementById('code').value;\n    const name = document.getElementById('name').value;\n    const progression = document.getElementById('progression').value;\n    const syllabus = document.getElementById('syllabus').value;\n    // Simple validation for progression\n    if (!['A', 'B', 'C'].includes(progression)) {\n        alert('Invalid progression value. Please select A, B, or C.');\n        return;\n    }\n    // Create a new course object\n    const newCourse = {\n        code,\n        name,\n        progression,\n        syllabus\n    };\n    addCourse(newCourse);\n    // Clear form fields after submission\n    courseForm.reset();\n});\n// Display courses on page load\ndisplayCourses();\n"],"names":[],"version":3,"file":"index.44983732.js.map","sourceRoot":"/__parcel_source_root/"}